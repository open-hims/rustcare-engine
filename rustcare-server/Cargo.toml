[package]
name = "rustcare-server"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
keywords.workspace = true
categories.workspace = true
description = "RustCare Engine HTTP Server - HIPAA-compliant healthcare platform API"

[[bin]]
name = "rustcare-server"
path = "src/main.rs"

[dependencies]
# Workspace dependencies
tokio = { workspace = true, features = ["full"] }
async-trait = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
uuid = { workspace = true, features = ["v4", "serde"] }
thiserror = { workspace = true }
anyhow = { workspace = true }
chrono = { workspace = true, features = ["serde"] }
tracing = { workspace = true }

# Web framework
axum = { version = "0.7", features = ["macros", "tower-log", "ws"] }
tower = { version = "0.4", features = ["full"] }
tower-http = { version = "0.5", features = ["cors", "trace"] }
hyper = { version = "1.0", features = ["full"] }
http-body-util = "0.1"  # For response body manipulation in masking middleware
futures = "0.3"

# Internal dependencies
error-common = { path = "../error-common" }
auth-gateway = { path = "../auth-gateway" }
auth-identity = { path = "../auth-identity" }
auth-oauth = { path = "../auth-oauth" }
auth-zanzibar = { path = "../auth-zanzibar" }
events-bus = { path = "../events-bus" }
config-engine = { path = "../config-engine" }
workflow-engine = { path = "../workflow-engine" }
audit-engine = { path = "../audit-engine" }
crypto = { path = "../crypto" }
object-governance = { path = "../object-governance" }
telemetry = { path = "../telemetry" }
plugin-runtime-core = { path = "../plugin-runtime-core" }
plugins-registry-api = { path = "../plugins-registry-api" }
logger-redacted = { path = "../logger-redacted" }
email-service = { path = "../email-service" }
database-layer = { path = "../database-layer" }

# Database
sqlx = { workspace = true }
ipnetwork = { version = "0.20", features = ["serde"] }

# JWT and Crypto
jsonwebtoken = "9.2"
rsa = "0.9"
sha2 = "0.10"
base64 = "0.21"
rand = "0.8"

# Password hashing and MFA
argon2 = "0.5"               # Argon2id password hashing
totp-lite = "2.0"            # TOTP for MFA
data-encoding = "2.5"        # Base32 encoding for TOTP secrets
subtle = "2.5"               # Constant-time comparisons
hex = "0.4"                  # Hex encoding for backup codes

# OAuth2 and HTTP client
oauth2 = "4.4"               # OAuth2 client implementation
reqwest = { version = "0.11", features = ["json", "rustls-tls"], default-features = false }

# Session management
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"] }

# Certificate authentication
x509-parser = "0.16"         # X.509 certificate parsing
rcgen = "0.13"               # Certificate generation (testing)
pem = "3.0"                  # PEM encoding/decoding
webpki = "0.22"              # Certificate validation
webpki-roots = "0.26"        # Mozilla root certificates

# Additional web dependencies
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
clap = { version = "4.4", features = ["derive", "env"] }
config = "0.14"
toml = "0.8"
urlencoding = "2.1"

# OpenAPI documentation
utoipa = { version = "4.2", features = ["axum_extras", "chrono", "uuid"] }
utoipa-swagger-ui = { version = "6.0", features = ["axum"] }

# gRPC support
tonic = { version = "0.10", features = ["tls", "tls-roots"] }
prost = "0.12"
prost-types = "0.12"

# WebSocket support
axum-extra = { version = "0.9", features = ["typed-header"] }
tokio-tungstenite = "0.21"
tokio-stream = "0.1"



[build-dependencies]
tonic-build = "0.10"