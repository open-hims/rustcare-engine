name: Tests & Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-ui:
    name: Frontend Tests & Coverage
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: pnpm/action-setup@v2
        with:
          version: 9
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: rustcare-ui/pnpm-lock.yaml
      
      - name: Install dependencies
        working-directory: rustcare-ui
        run: pnpm install
      
      - name: Run unit tests with coverage
        working-directory: rustcare-ui
        run: pnpm test:coverage
      
      - name: Install Playwright browsers
        working-directory: rustcare-ui
        run: pnpm exec playwright install --with-deps chromium
      
      - name: Run E2E tests
        working-directory: rustcare-ui
        run: pnpm test:e2e
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: ui-coverage
          path: rustcare-ui/coverage/
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: rustcare-ui/playwright-report/
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: rustcare-ui

  test-backend:
    name: Backend Tests & Coverage
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      
      - name: Run tests with coverage
        working-directory: rustcare-engine
        run: |
          cargo llvm-cov test --workspace --all-features \
            --lcov --output-path target/llvm-cov/lcov.info
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: rustcare-engine/target/llvm-cov/
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: rustcare-engine

  coverage-report:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: [test-ui, test-backend]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download UI coverage
        uses: actions/download-artifact@v4
        with:
          name: ui-coverage
          path: coverage-ui
      
      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: coverage-backend
      
      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: codecov/codecov-action@v4
        with:
          files: coverage-ui/lcov.info,coverage-backend/lcov.info
          fail_ci_if_error: true
